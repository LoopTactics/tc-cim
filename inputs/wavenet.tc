# Original data is float(B, C, RECEPTIVE_FIELD) and undergoes a \
# Conv1d to become float(B, RESIDUAL_C, RECEPTIVE_FIELD)

def wavenet1(
    float(B, RESIDUAL_C, RECEPTIVE_FIELD) Data,
    float(DILATION_C, RESIDUAL_C, 2) FilterWeight,
    float(DILATION_C) FilterBias,
    float(DILATION_C, RESIDUAL_C, 2) GateWeight,
    float(DILATION_C) GateBias,
    float(RESIDUAL_C, DILATION_C) ResWeight,
    float(RESIDUAL_C) ResBias,
    float(SKIP_C, DILATION_C) SkipWeight,
    float(SKIP_C) SkipBias,
    float(DILATION_FACTOR) Dilation)
    -> (FilterOut, GateOut, NonLin, Res, Skip)
{
    FilterOut(b, dilation_c, rf)   = FilterBias(dilation_c)
        where b in 0:B, dilation_c in 0:DILATION_C, rf in 0:RECEPTIVE_FIELD
    FilterOut(b, dilation_c, rf)  += Data(b, r_residual_c, rf) * FilterWeight(dilation_c, r_residual_c, 1) +
        (
          (rf - DILATION_FACTOR >= 0) ?
            Data(b, r_residual_c, rf - DILATION_FACTOR) * FilterWeight(dilation_c, r_residual_c, 0) :
            float(0)
        )
        where rf in 0:RECEPTIVE_FIELD

    GateOut(b, dilation_c, rf)   = GateBias(dilation_c)
        where b in 0:B, dilation_c in 0:DILATION_C, rf in 0:RECEPTIVE_FIELD
    GateOut(b, dilation_c, rf)  += Data(b, r_residual_c, rf) * GateWeight(dilation_c, r_residual_c, 1) +
        (
          (rf - DILATION_FACTOR >= 0) ?
            Data(b, r_residual_c, rf - DILATION_FACTOR) * GateWeight(dilation_c, r_residual_c, 0) :
            float(0)
        )
        where rf in 0:RECEPTIVE_FIELD

    NonLin(b, dilation_c, rf)   =         tanh(FilterOut(b, dilation_c, rf))
        where rf in 0:RECEPTIVE_FIELD
    NonLin(b, dilation_c, rf)  *= 1 / (1 + exp( -GateOut(b, dilation_c, rf)))
        where rf in 0:RECEPTIVE_FIELD

       Res(b, residual_c, rf)   =   Data(b,  residual_c, rf) + ResBias(residual_c)
       Res(b, residual_c, rf)  += NonLin(b, r_dilation_c, rf) * ResWeight(residual_c, r_dilation_c)

      Skip(b, skip, rf) +=! NonLin(b, r_dilation_c, rf) * SkipWeight(skip, r_dilation_c)
        where rf in 0:RECEPTIVE_FIELD
      Skip(b, skip, rf)  = Skip(b, skip, rf) + SkipBias(skip)
        where rf in 0:RECEPTIVE_FIELD
}
